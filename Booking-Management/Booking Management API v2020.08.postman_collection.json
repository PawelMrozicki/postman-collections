{
	"info": {
		"_postman_id": "0d24c04a-2bb6-4e9e-9f8c-1191c633ae58",
		"name": "Booking Management API v2020.08",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "REST Authorize",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3139afa3-ef99-41f4-9550-d5d176c87b86",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac5d6d80-8ef8-49d4-8ec2-673a318de2cb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic {{secret}}",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=client_credentials"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v2/auth/token",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v2",
								"auth",
								"token"
							]
						},
						"description": "\n\n[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/resources/getting_started_with_sabre_apis/how_to_get_a_token#3sub3)\n\n[//]: # \"End\""
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Booking",
			"item": [
				{
					"name": "GetBooking /v1 General",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "df05579e-7095-40d2-ac87-6b7cb68dfd26",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"KVKKPB\"\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 General + surname",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "599480b6-8513-45a2-8b81-6bfad2ccbacc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"RPMHRI\",\r\n  \"surname\": \"Power\"\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 Return Only Flights",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4783f4c6-b1ce-46b6-a172-60f9e87eefd0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"confirmationId\": \"KLVHQD\",\r\n  \"returnOnly\":\r\n  [ \"FLIGHTS\"]\r\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "GetBooking /v1 GraphQL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "683bec40-9b50-4288-8aa7-07d862f616d4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\r\n    getBooking(confirmationId: \"RPMHRI\", surname: \"Power\") {\r\n        travelers\r\n        {\r\n            givenName\r\n            surname\r\n        }\r\n        flights\r\n        {\r\n            flightNumber\r\n            fromAirportCode\r\n            toAirportCode\r\n            departureDate\r\n            arrivalDate\r\n        }\r\n        \r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/getBooking/graphql",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"getBooking",
								"graphql"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cancel Booking",
			"item": [
				{
					"name": "Cancel Booking /v1 Cancel All",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"FDAJBQ\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel All + Change PCC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1dd9b86b-b815-4c08-8491-6cff1775e0e6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"targetPcc\": \"IPCC\",\n    \"confirmationId\": \"FDAJBQ\",\n    \"cancelAll\": true\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Flights",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"RPMHRI\",\n    \"retrieveBooking\": false,\n    \"cancelAll\": false,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"flights\": [\n        {\n            \"itemId\": 25\n        },\n        {\n            \"itemId\": 26\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Hotels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"MWOCYN\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": false,\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"hotels\": [\n        {\n            \"itemId\": 42\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Item Id - Flights, Hotels, Cars",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"DLPLZC\",\r\n    \"cars\": [\r\n        {\r\n            \"itemId\": 77\r\n        }\r\n    ],\r\n    \"flights\": [\r\n        {\r\n            \"itemId\": 2\r\n        },\r\n        {\r\n            \"itemId\": 3\r\n        },\r\n        {\r\n            \"itemId\": 4\r\n        },\r\n        {\r\n            \"itemId\": 88\r\n        }\r\n    ],\r\n    \"hotels\": [\r\n        {\r\n            \"itemId\": 25\r\n        },\r\n        {\r\n            \"itemId\": 220\r\n        }\r\n    ]\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Segment Sequence",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"UMODWZ\",\r\n    \"segments\": [\r\n        {\r\n            \"sequence\": 1\r\n        },\r\n        {\r\n            \"sequence\": 3\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel by Segment Id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Conversation-ID",
								"value": "{{conv_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"confirmationId\": \"UMODWZ\",\r\n    \"segments\": [\r\n        {\r\n            \"id\": 38\r\n        },\r\n        {\r\n            \"id\": 26\r\n        }\r\n    ]\r\n}\r\n"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel All and Void corresponding tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"FDAJBQ\",\n    \"retrieveBooking\": true,\n    \"cancelAll\": true,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Booking /v1 Cancel Flights and Void corresponding tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmationId\": \"RPMHRI\",\n    \"retrieveBooking\": false,\n    \"cancelAll\": false,\n    \"flightTicketOperation\": \"VOID\",\n    \"errorHandlingPolicy\": \"HALT_ON_ERROR\",\n    \"flights\": [\n        {\n            \"itemId\": 25\n        },\n        {\n            \"itemId\": 26\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelBooking",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelBooking"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cancel Flight Tickets",
			"item": [
				{
					"name": "Cancel Flight Tickets - with ALLOW_PARTIAL_CANCEL policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n    \"6071237616558\",\n    \"6074567616559\",\n    \"6077897616560\"\n  ],\n  \"errorHandlingPolicy\": \"ALLOW_PARTIAL_CANCEL\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				},
				{
					"name": "Cancel Flight Tickets - with HALT_ON_ERROR policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Conversation-ID",
								"type": "text",
								"value": "{{conv_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tickets\": [\n    \"6071237616558\",\n    \"6074567616559\",\n    \"6077897616560\"\n  ],\n  \"errorHandlingPolicy\": \"HALT_ON_ERROR\"  \n}"
						},
						"url": {
							"raw": "{{rest_endpoint}}/v1/trip/orders/cancelFlightTickets",
							"host": [
								"{{rest_endpoint}}"
							],
							"path": [
								"v1",
								"trip",
								"orders",
								"cancelFlightTickets"
							]
						},
						"description": "[//]: # \"Start\"\n\n<b>[Description](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management), [Resources](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/reference-documentation), [Help](https://developer.sabre.com/docs/rest_apis/trip/orders/booking_management/help)</b>\n\n[//]: # \"End\""
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b0894d59-59c3-4754-a831-31fcff312e11",
				"type": "text/javascript",
				"exec": [
					"",
					"// Get the first string of the URI",
					"const URI = request.url.split(\"/\")[0];",
					"// Postman doesn't define a variable until the request is sent, therefore the URI is either:",
					"// {{rest_endpoint}}/xx/yy/zz or {{soap_endpoint}}",
					"",
					"",
					"// Capture today's date",
					"var moment = require('moment');",
					"// Add 30 days to today's date and use this date in start_date",
					"const start_date = moment().add(30, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('start_date', start_date);",
					"// Add 37 days to today's date and use this date in end_date",
					"const end_date = moment().add(37, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('end_date', end_date);",
					"// Add 33 days to today's date and use this date in short_end_date (primarily for hotel search)",
					"const short_end_date = moment().add(33, 'day').format(\"YYYY-MM-DD\");",
					"pm.environment.set('short_end_date', short_end_date);",
					"",
					"",
					"// Set the conversation id for this collection\t",
					"pm.environment.set('conv_id', \"2020.05.DevStudio_Booking_Management\");",
					"",
					"// Some services that accept a PCC require an upper-case PCC",
					"var pcc = pm.variables.get('pcc');",
					"pm.environment.set('pcc', pcc.toUpperCase());",
					"",
					"",
					"// Analyze 'token' variable, if it starts with \"ATH:\" this text is removed as it's not accepted by Sabre's 2SG gateways ",
					"var token = pm.variables.get('token');",
					"// Evaluate if token is defined or not null, and only then attempt to remove the ATH prefix",
					"if (token) {",
					"    pm.environment.set('token', token.replace(/^ATH:/, ''));",
					"}",
					"",
					"if ((URI) == ('{{soap_endpoint}}')) {",
					"",
					"    //***SOAP Path***//",
					"    //This means that the temp URL is: {{soap_endpoint}}",
					"",
					"    // Get service action code from request name and ignore the following prefixes if present:\t",
					"    // underscore (_)\t",
					"    // number(s) & dot (eg: 1. or 10.)\t",
					"    // these variations are used in different examples across this collection\t",
					"    const action = request.name.split(' ')[0].replace(/^_|[0-9]*\\./, '');",
					"",
					"    // Add the token value into the token variable",
					"    const token = pm.variables.get('token');",
					"",
					"    // Add the ApplicationId value into the AppId variable",
					"    const AppId = pm.variables.get('AppId');",
					"",
					"    // Add the ConversationId value into the ConvId variable\t",
					"    const conv_id = pm.variables.get('conv_id');",
					"",
					"    // All SOAP API calls require a header section, we have created this variable to remove it from the \"working\" message and ensure the user can focus on the payload section ",
					"",
					"",
					"\tconst header = `<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"><SOAP-ENV:Header><MessageHeader xmlns=\"http://www.ebxml.org/namespaces/messageHeader\"><From><PartyId>Agency</PartyId></From><To><PartyId>SWS</PartyId></To><ConversationId>${conv_id}</ConversationId><Action>${action}</Action></MessageHeader><Security xmlns=\"http://schemas.xmlsoap.org/ws/2002/12/secext\"><BinarySecurityToken EncodingType=\"Base64Binary\" valueType=\"String\">${token}</BinarySecurityToken></Security></SOAP-ENV:Header><SOAP-ENV:Body>`;",
					"",
					"",
					"",
					"",
					"    // Same as previous item, this footer variable is used to close the entire SOAP envelope",
					"    const footer = '</SOAP-ENV:Body></SOAP-ENV:Envelope>';",
					"",
					"    // Add header & footer variables into the specific variables",
					"    pm.variables.set('header', header);",
					"    pm.variables.set('footer', footer);",
					"",
					"",
					"} else if ((URI) == ('{{rest_endpoint}}')) {",
					"",
					"    //***REST Path***//",
					"    //This means that the temp URL is: {{rest_endpoint}}/xx/yy/zz",
					"",
					"",
					"    // Capture URI element which identifies the API method",
					"    const URI_ID = request.url.split(\"/\")[3];",
					"",
					"",
					"    switch (URI_ID) {",
					"",
					"        case 'token':",
					"            // Capture username",
					"            const username = pm.variables.get('username');",
					"            // Capture PCC",
					"            const pcc = pm.variables.get('pcc');",
					"            // Construct raw client id (by appending V1:username:PCC:AA)",
					"            const clientidRaw = `V1:${username}:${pcc}:AA`;",
					"            // Base64 encode the previous string",
					"            const clientidArray = CryptoJS.enc.Utf8.parse(clientidRaw);",
					"            const clientidBase64 = CryptoJS.enc.Base64.stringify(clientidArray);",
					"            // Capture password",
					"            const passwordRaw = pm.variables.get('password');",
					"            // Base64 enconde the password",
					"            const passwordArray = CryptoJS.enc.Utf8.parse(passwordRaw);",
					"            const passwordBase64 = CryptoJS.enc.Base64.stringify(passwordArray);",
					"            // Combine the two previous strings with a : in the middle",
					"            const secretRaw = `${clientidBase64}:${passwordBase64}`;",
					"            // Base64 enconde this last string",
					"            const secretArray = CryptoJS.enc.Utf8.parse(secretRaw);",
					"            const secretBase64 = CryptoJS.enc.Base64.stringify(secretArray);",
					"            // Set the secret variable with the latest encoded string",
					"            pm.environment.set('secret', secretBase64);",
					"\t        // Clear the token variable as it will be populated with a new token upon successful execution of this API call",
					"            pm.environment.set('token', \"\");",
					"            break;",
					"",
					"        case 'shop':",
					"",
					"            break;",
					"    }",
					"}",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "abf8ff46-573d-42bb-8dcf-2b169ff137ed",
				"type": "text/javascript",
				"exec": [
					"",
					"// Logic to ensure that any potential / at the end of the request url would not impact the matching logic to determine if a request is being sent to Sabre's REST or SOAP endpoint.",
					"// Some Postman versions automatically append a / at the end of the request url, so if identified it gets removed",
					"",
					"var requestURL = request.url;",
					"if (requestURL.charAt(requestURL.length-1) == \"/\") {",
					"    requestURL = requestURL.substring(0, requestURL.length - 1);",
					"}",
					"",
					"// Only execute the following code for SOAP APIs (based on the endpoint being used)",
					"if (((request.url) == (pm.environment.get(\"soap_endpoint\"))) || ((requestURL) == (pm.environment.get(\"soap_endpoint\")))){",
					"",
					"    //***SOAP Path***//",
					"",
					"    const xml2js = require('xml2js');",
					"",
					"    // Get service action code from request name and ignore the following prefixes if present:\t",
					"    // underscore (_)\t",
					"    // number(s) & dot (eg: 1. or 10.)\t",
					"    // these variations are used in different examples across this collection\t",
					"    const action = request.name.split(' ')[0].replace(/^_|[0-9]*\\./, '');",
					"",
					"    // Parse response and remove namespaces (prefixes)",
					"    // Solves problem when specific APIs return different namespaces randombly ie. ns8, ns9: TP APIs",
					"    const parseString = xml2js.parseString;",
					"    const parseOptions = { tagNameProcessors: [xml2js.processors.stripPrefix] };",
					"",
					"    switch (action) {",
					"        case 'SessionCreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Header[0].Security[0].BinarySecurityToken[0]._;",
					"\t            pm.environment.set('token', \"\");",
					"                pm.environment.set('token', token);",
					"            });",
					"            break;",
					"        case 'TokenCreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const token = result.Envelope.Header[0].Security[0].BinarySecurityToken[0]._;",
					"                pm.environment.set('token', \"\");",
					"                pm.environment.set(\"token\", token);",
					"            });",
					"            break;",
					"        case 'ContextChangeLLSRQ':\t",
					"            parseString(responseBody, parseOptions, (err, result) => {\t",
					"                const token = result.Envelope.Body[0].ContextChangeRS[0].SecurityToken[0];\t",
					"                if ((token.$.Updated) == ('true')) {\t",
					"                    pm.environment.set('token', \"\");\t",
					"                    pm.environment.set('token', token._);\t",
					"                }",
					"\t        });\t",
					"            break;",
					"        case 'CreatePassengerNameRecordRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const pnr = result.Envelope.Body[0].CreatePassengerNameRecordRS[0].ItineraryRef[0].$.ID;",
					"                pm.environment.set('pnr', pnr);",
					"            });",
					"            break;",
					"        case 'EnhancedEndTransactionRQ':\t",
					"            parseString(responseBody, parseOptions, (err, result) => {\t",
					"                const pnr = result.Envelope.Body[0].EnhancedEndTransactionRS[0].ItineraryRef[0].$.ID;\t",
					"                pm.environment.set('pnr', pnr);\t",
					"            });\t",
					"            break;",
					"        case 'AirTicketRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const summary = result.Envelope.Body[0].AirTicketRS[0].Summary;",
					"                summary.forEach((tktDoc, i) => {",
					"                    const tktNum = 'tkt' + (i === 0 ? '' : i + 1);",
					"                    const tktDateTime = tktDoc.LocalIssueDateTime[0];",
					"                    const tktDate = tktDateTime.substring(tktDateTime, tktDateTime.indexOf('T'));",
					"                    pm.environment.set(tktNum, tktDoc.DocumentNumber[0]);",
					"                    pm.environment.set(tktNum + '_date', tktDate);",
					"                });",
					"            });",
					"            break;",
					"        case 'TP_CreateRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalID = result.Envelope.Body[0].TP_CreateRS[0].$.proposalID;",
					"                pm.environment.set('proposal_id', proposalID);",
					"            });",
					"            break;",
					"        case 'TP_ReadRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalVersion = result.Envelope.Body[0].TP_ReadRS[0].TripProposal[0].$.proposalVersion;",
					"                pm.environment.set('proposal_version', proposalVersion);",
					"            });",
					"            break;",
					"        case 'TP_RefreshRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const proposalVersion = result.Envelope.Body[0].TP_RefreshRS[0].TripProposal[0].$.proposalVersion;",
					"                pm.environment.set('proposal_version', proposalVersion);",
					"            });",
					"            break;",
					"        case 'GetHotelAvailRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const hotelCode = result.Envelope.Body[0].GetHotelAvailRS[0].HotelAvailInfos[0].HotelAvailInfo[0].HotelInfo[0].$.HotelCode;",
					"                pm.environment.set('hotel_code', hotelCode);",
					"            });",
					"            break;",
					"        case 'GetHotelDetailsRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const rateKey = result.Envelope.Body[0].GetHotelDetailsRS[0].HotelDetailsInfo[0].HotelRateInfo[0].RateInfos[0].RateInfo[0].$.RateKey;",
					"                pm.environment.set('rate_key', rateKey);",
					"            });",
					"            break;",
					"        case 'HotelPriceCheckRQ':",
					"            parseString(responseBody, parseOptions, (err, result) => {",
					"                const bookingKey = result.Envelope.Body[0].HotelPriceCheckRS[0].PriceCheckInfo[0].$.BookingKey;",
					"                pm.environment.set('booking_key', bookingKey);",
					"            });",
					"            break;",
					"        // Add new API here",
					"    }",
					"",
					"    pm.environment.unset('header');\t",
					"    pm.environment.unset('footer');",
					"",
					"} else {",
					"",
					"    //***REST Path***//",
					"",
					"    // Get the Unique ID of the URI (token, shop, price, create, view, cancel, change) based on the \"5th\" or \"6th\" string in order to identify the actual API. Examples below:",
					"    // eg. https:/   /api-crt.cert.havail.sabre.com/v1 /offers/shop",
					"    //      [0] /[1]/           [2]               /[3]/  [4] / [5]   ",
					"    // eg. https:/   /api-crt.cert.havail.sabre.com/v1 / trip/orders/getBooking",
					"    //      [0] /[1]/           [2]               /[3]/ [4] /  [5] /    [6]    ",
					"    ",
					"    var URI_ID = request.url.split(\"/\")[5];",
					"    // If the 5th position contains the text \"orders\", then capture the \"6th\" position",
					"    if (URI_ID == \"orders\") {",
					"        URI_ID = request.url.split(\"/\")[6]",
					"    }",
					"",
					"    // Get the JSON response",
					"    const jsonData = JSON.parse(responseBody);",
					"",
					"    switch (URI_ID) {",
					"",
					"        case 'token':",
					"",
					"            pm.environment.set('token', jsonData.access_token);",
					"            break;",
					"        case 'shop':",
					"            pm.environment.set('shop_offer_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].offer.offerId);",
					"            pm.environment.set('shop_offer_item_id', jsonData.groupedItineraryResponse.itineraryGroups[0].itineraries[0].pricingInformation[0].fare.offerItemId);",
					"            break;",
					"        case 'price':",
					"            pm.environment.set('price_offer_id', jsonData.response.offers[0].id);",
					"            pm.environment.set('price_offer_item_id', jsonData.response.offers[0].offerItems[0].id);",
					"\t        pm.environment.set('price_passenger_id', jsonData.response.offers[0].offerItems[0].passengers[0].id);",
					"            break;",
					"        case 'create':",
					"            pm.environment.set('sabre_order_id', jsonData.order.id);",
					"            pm.environment.set('pnr', jsonData.order.pnrLocator);",
					"\t        pm.environment.set('name_reference', jsonData.order.passengers[0].id);\t",
					"            break;\t",
					"        case 'view':\t",
					"            pm.environment.set('sabre_order_id', jsonData.order.id);\t",
					"            pm.environment.set('pnr', jsonData.order.pnrLocator);\t",
					"            pm.environment.set('name_reference', jsonData.order.passengers[0].id);",
					"            break;",
					"        case 'hotelavail':",
					"            pm.environment.set('hotel_code', jsonData.GetHotelAvailRS.HotelAvailInfos.HotelAvailInfo[0].HotelInfo.HotelCode);",
					"            pm.environment.set('rate_key', jsonData.GetHotelAvailRS.HotelAvailInfos.HotelAvailInfo[0].HotelRateInfo.RateInfos.RateInfo[0].RateKey);",
					"            break;",
					"        case 'hoteldetails':",
					"            pm.environment.set('rate_key', jsonData.GetHotelDetailsRS.HotelDetailsInfo.HotelRateInfo.RateInfos.RateInfo[0].RateKey);",
					"            break;",
					"        case 'pricecheck':",
					"            pm.environment.set('booking_key', jsonData.HotelPriceCheckRS.PriceCheckInfo.BookingKey);",
					"            break;",
					"        case 'records?mode=create':",
					"            pm.environment.set('pnr', jsonData.CreatePassengerNameRecordRS.ItineraryRef.ID);",
					"            break;",
					"",
					"        // Add new API here",
					"",
					"    }",
					"}",
					"",
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}